<ehcache>

	<!-- 设置缓存在硬盘上的存储位置 -->
	<diskStore path="java.io.tmpdir"/>
	
	<!-- 手动成员发现 PeerProvider -->
	<!--<cacheManagerPeerProviderFactory 
			class="net.sf.ehcache.distribution.RMICacheManagerPeerProviderFactory"
			properties="peerDiscovery=manual,
			rmiUrls=//192.168.1.48:40001/sessionCache"/>-->
			
	<!-- 自动成员发现 -->
	<!-- <cacheManagerPeerProviderFactory 
			class="net.sf.ehcache.distribution.RMICacheManagerPeerProviderFactory"
			properties="peerDiscovery=automatic,
			multicastGroupAddress=230.1.0.1,
			multicastGroupPort=4446,
			timeToLive=32"/> -->
			
	<!-- 监听其他集群成员发向当前CacheManager的信息 -->
	<!--  <cacheManagerPeerListenerFactory
			class="net.sf.ehcache.distribution.RMICacheManagerPeerListenerFactory"
			properties="hostName=192.168.1.48,port=40001,socketTimeoutMillis=12000"
	/>-->

	<!--
		缓存的参数设置:
		name:Cache的名称,必须唯一
		maxElementsInMemory: 缓存的最大个数
		eternal:对象是否永久有效
		timeToIdleSeconds:设置对象在失效前的允许闲置时间,只对eternal为false的有效,默认值为0,表示一直可以访问
		timeToLiveSeconds:设置对象在失效前允许存活时间,只对eternal为false的有效,默认值为0,表示一直可以访问(创建时间为基准)
		overflowToDisk：当内存中的对象数达到maxElementsInMemory时,是否将对象写入磁盘
		diskPersistent:是否在磁盘上持久化,指重启JVM后,数据是否有效,默认为false
		maxElementsOnDisk:DiskStore中保持的对象数量,默认是0,表示无限制
		diskSpoolBufferSizeMB:设置磁盘的缓存区大小,默认是30MB,每个Cache都有自己的一个缓存区,不超过2GB
		diskExpiryThreadIntervalSeconds:对象检测线程运行的时间间隔,默认是120秒
		memoryStoreEvictionPolicy:当达到maxElementsInMemory限制时,Ehcache将会根据指定的策略去清理内存,默认策略是LRU(最近最少使用)
		你可以设置为FIFO(先进先出)或是LFU(较少使用)
		clearOnFlush:内存数量最大时是否清除
	 -->
	 
	  
	<!--当在程序中新建cache时,字典使用,需要有此默认缓存参数设置-->
	<defaultCache maxElementsInMemory="10000" 
				  eternal="true"      
                  timeToIdleSeconds="0" 
                  timeToLiveSeconds="0" 
                  overflowToDisk="true"      
                  diskSpoolBufferSizeMB="30" 
                  maxElementsOnDisk="10000000"      
                  diskPersistent="false" 
                  diskExpiryThreadIntervalSeconds="120"      
                  memoryStoreEvictionPolicy="LRU">      
        <!--  <cacheEventListenerFactory      
            class="net.sf.ehcache.distribution.RMICacheReplicatorFactory" /> 
        <bootstrapCacheLoaderFactory class="net.sf.ehcache.distribution.RMIBootstrapCacheLoaderFactory"/>    -->     
    </defaultCache> 

	<!-- session的缓存及参数设置 -->
	<cache
		name="sessionCache"
		eternal="true"
		maxElementsInMemory="10000"
		overflowToDisk="true"
		clearOnFlush = "false">
		<!-- <cacheEventListenerFactory
			class="net.sf.ehcache.distribution.RMICacheReplicatorFactory"
			properties="replicateAsynchronously=true, 
						replicatePuts=true, 
						replicateUpdates=true,
						replicateUpdatesViaCopy=false, 
						replicateRemovals=true "/>
		<bootstrapCacheLoaderFactory class="net.sf.ehcache.distribution.RMIBootstrapCacheLoaderFactory"/> -->
	</cache>
	
	<!-- 手机端session缓存及参数配置 -->
	<cache
		name="mobileCache"
		eternal="true"
		maxElementsInMemory="10000"
		overflowToDisk="true"
		clearOnFlush = "false">
		<!-- <cacheEventListenerFactory
			class="net.sf.ehcache.distribution.RMICacheReplicatorFactory"
			properties="replicateAsynchronously=true, 
						replicatePuts=true, 
						replicateUpdates=true,
						replicateUpdatesViaCopy=false, 
						replicateRemovals=true "/>
		<bootstrapCacheLoaderFactory class="net.sf.ehcache.distribution.RMIBootstrapCacheLoaderFactory"/> -->
	</cache>

</ehcache>