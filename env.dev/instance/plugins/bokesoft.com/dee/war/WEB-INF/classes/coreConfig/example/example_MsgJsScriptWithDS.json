{
	"explains":{"type":"string","data":"\n上下文中有一个可供使用的对象：\n\tdbop:数据库操作对象，包含六个方法，\n\t\tList<Map> select(String sql, Object[] paramsValue);//执行查询操作(参数在sql中用问号表示，通过数组传入参数)\n\t\tList<Map> select(String sql, MuleMessage message);//执行查询操作(参数在sql中用表达式表示，系统通过表达式在传入的message对象中查找参数)\n\t\tint saveOrUpdate(String sql, Object[] paramsValue,boolean joinTransaction);//执行insert、update或delete，最后一个参数控制本次操作是否加入已有的事务(参数在sql中用问号表示，通过数组传入参数；如果使用truncate数据定义语言来删除表的数据，事务将无效)\n\t\tint saveOrUpdate(String sql, MuleMessage message, boolean joinTransaction);//执行insert、update或delete，最后一个参数控制本次操作是否加入已有的事务(参数在sql中用表达式表示，系统通过表达式在传入的message对象中查找参数；如果使用truncate数据定义语言来删除表的数据，事务将无效)\n\t\tObject executeProc(String procStr, MuleMessage message, boolean joinTransaction);//执行存储过程(详见文档)\n\t\tConnection getConnection(boolean joinTransaction);//获得java.sql.Connection对象(适用于需要获取连接自定义操作的特殊情况，参数表示获取的连接是否加入事务)\n\t\t//js中的数组类型使用方式：var paramsValue = new Array();paramsValue[0]=... \n\tmessage:包含payload，其中包括这几个可能会用到的方法，\n\t\tvoid setInboundProperty(String key, Object value);//设置Inbound参数\n\t\tvoid setInvocationProperty(String key, Object value);//设置Invocation参数\n\t\tvoid setOutboundProperty(String key, Object value);//设置Outbound参数\n\t\tvoid setSessionProperty(String key, Object value);//设置Session参数\n\t\t<T> T getInboundProperty(String name);//获取Inbound参数\n\t\t<T> T getInvocationProperty(String name);//获取Invocation参数\n\t\t<T> T getOutboundProperty(String name);//获取Outboun参数\n\t\t<T> T getSessionProperty(String name);//获取Session参数\n\t\tObject getPayload();//获取payload"}
}