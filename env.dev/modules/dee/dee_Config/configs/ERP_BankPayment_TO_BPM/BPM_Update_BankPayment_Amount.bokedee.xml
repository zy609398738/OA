<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns:ftp="http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.ftp/1.2"
	xmlns:script="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:file="http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.file/1.2"
	xmlns:http="http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.http/1.2"
	xmlns:https="http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.https/1.2"
	xmlns:tcp="http://www.mulesoft.org/schema/mule/tcp"
	xmlns:stdio="http://www.mulesoft.org/schema/mule/stdio" xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf"
	xmlns:axis="http://www.mulesoft.org/schema/mule/axis" xmlns:jbossts="http://www.mulesoft.org/schema/mule/jbossts"
	xmlns:jdbc="http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.jdbc/1.2"
	xmlns:pattern="http://www.mulesoft.org/schema/mule/pattern" xmlns:sftp="http://www.mulesoft.org/schema/mule/sftp"
	xmlns:smooks="http://www.muleforge.org/smooks/schema/mule-module-smooks"
  xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
  xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp"
  xmlns:imap="http://www.mulesoft.org/schema/mule/imap"
 xmlns:pop3="http://www.mulesoft.org/schema/mule/pop3"
  xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.1/mule.xsd
http://www.mulesoft.org/schema/mule/jbossts http://www.mulesoft.org/schema/mule/jbossts/3.1/mule-jbossts.xsd
http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.jdbc/1.2 http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.jdbc/1.2/mule-com.bokesoft.dee.patch.jdbc.xsd
http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.file/1.2 http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.file/1.2/mule-com.bokesoft.dee.patch.file.xsd
http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.http/1.2 http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.http/1.2/mule-com.bokesoft.dee.patch.http.xsd
http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.https/1.2 http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.https/1.2/mule-com.bokesoft.dee.patch.https.xsd
http://www.mulesoft.org/schema/mule/tcp http://www.mulesoft.org/schema/mule/tcp/3.1/mule-tcp.xsd
http://www.muleforge.org/smooks/schema/mule-module-smooks http://dist.muleforge.org/smooks/schema/mule-module-smooks/1.1/mule-module-smooks.xsd
http://www.mulesoft.org/schema/mule/stdio http://www.mulesoft.org/schema/mule/stdio/3.1/mule-stdio.xsd
http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/3.1/mule-cxf.xsd
http://www.mulesoft.org/schema/mule/axis http://www.mulesoft.org/schema/mule/axis/3.1/mule-axis.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/3.1/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/pattern http://www.mulesoft.org/schema/mule/pattern/3.1/mule-pattern.xsd
        http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.ftp/1.2 http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.ftp/1.2/mule-com.bokesoft.dee.patch.ftp.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/3.1/mule-vm.xsd 
     http://www.mulesoft.org/schema/mule/sftp http://www.mulesoft.org/schema/mule/sftp/3.1/mule-sftp.xsd 
    http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/3.1/mule-jms.xsd 
  http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/3.1/mule-smtp.xsd 
	http://www.mulesoft.org/schema/mule/imap http://www.mulesoft.org/schema/mule/imap/3.1/mule-imap.xsd 
 http://www.mulesoft.org/schema/mule/pop3 http://www.mulesoft.org/schema/mule/pop3/3.1/mule-pop3.xsd ">

		<!--记录更新本地银行付款单中间表与核销表接口日志-->
	<custom-transformer class="com.bokesoft.exchange.transformer.ScriptWithDSTransformer" name="记录更新本地银行付款单中间表与核销表接口日志">
		<spring:property name="ds" ref="2c9081d05be7e572015be80fcb64000f_YIGO2_DB"></spring:property>
		<spring:property name="script">
			<spring:value>
			<![CDATA[
				String expMsg = "";
Map rsmap = new HashMap();
if (message.getExceptionPayload() != null)
{
    message.setOutboundProperty("http.status", 200);
    expMsg = message.getExceptionPayload().getRootException().getMessage();
    if (expMsg.length() > 3500)
    {
        expMsg = expMsg.substring(0, 3000);
    }
    message.setExceptionPayload(null);
    rsmap.put("code", "e");
    rsmap.put("msg", "更新失败！");
}
else
{
    rsmap.put("code", "s");
    rsmap.put("msg", "更新成功！");
    rsmap.put("data", payload);
}
Map logmap = message.getInboundProperty("logmap");
Object[] o = new Object[10];
o[0] = logmap.get("flow");
o[1] = logmap.get("node");
o[2] = logmap.get("billkey");
o[3] = logmap.get("oid");
o[4] = logmap.get("begintime");
o[5] = new java.text.SimpleDateFormat("yyyyMMdd HH:mm:ss.SSS").format(new java.sql.Timestamp(java.lang.System.currentTimeMillis()));
o[6] = "";
o[7] = "";
o[8] = expMsg;
o[9] = "BPM_Update_BankPayment_Amount";
dbop.saveOrUpdate("insert into TRINA_SL_INTERFACE_LOG(id,flow,node,billkey,oid,starttime,endtime,request_data,response_data,EXCEPTION,interface_type)values(Trina_SL_Interface_Log_ID_SEQ.Nextval,?,?,?,?,?,?,?,?,?,?)", o, false);
return com.bokesoft.dee.mule.util.json.JSONUtil.toJson(rsmap);
			]]>
			</spring:value>
		</spring:property>
	</custom-transformer>

		<custom-transformer class="com.bokesoft.dee.mule.common.transformer.LogProcessorTransformer" name="8aaae0d360766f5e0160772f95440068">
		<spring:property name="transformerName" value="记录更新本地银行付款单中间表与核销表接口日志"></spring:property>
		<spring:property name="filePath" value="${bokedee.logpath.debugLog}/ERP_BankPayment_TO_BPM"></spring:property>
		<spring:property name="errorLog" value="false"></spring:property>


	</custom-transformer><flow name="BPM_Update_BankPayment_Amount">
		<!--更新本地银行付款单中间表核销表入口-->
	<vm:inbound-endpoint  name="更新本地银行付款单中间表核销表入口"
		encoding="UTF-8"
		address="vm://BPM_Update_BankPayment_Amount" 
		exchange-pattern ="request-response" 
		responseTransformer-refs ="记录更新本地银行付款单中间表与核销表接口日志 8aaae0d360766f5e0160772f95440068"
		>
	</vm:inbound-endpoint>

		<custom-transformer class="com.bokesoft.dee.mule.common.transformer.LogProcessorTransformer" >
		<spring:property name="transformerName" value="更新本地银行付款单中间表核销表入口"></spring:property>
		<spring:property name="filePath" value="${bokedee.logpath.debugLog}/ERP_BankPayment_TO_BPM"></spring:property>
		<spring:property name="errorLog" value="false"></spring:property>


	</custom-transformer>

	<transformer ref="ggpz_启动JDBC事务"/>

		<custom-transformer class="com.bokesoft.dee.mule.common.transformer.LogProcessorTransformer" >
		<spring:property name="transformerName" value="启动JDBC事务"></spring:property>
		<spring:property name="filePath" value="${bokedee.logpath.debugLog}/ERP_BankPayment_TO_BPM"></spring:property>
		<spring:property name="errorLog" value="false"></spring:property>


	</custom-transformer>
		<!--记录更新本地银行付款单中间表核销表的开始时间-->
	<custom-transformer class="com.bokesoft.exchange.transformer.ScriptWithDSTransformer" name="记录更新本地银行付款单中间表核销表的开始时间">
		<spring:property name="ds" ref="2c9081d05be7e572015be80fcb64000f_YIGO2_DB"></spring:property>
		<spring:property name="script">
			<spring:value>
			<![CDATA[
				String begintime = new java.text.SimpleDateFormat("yyyyMMdd HH:mm:ss.SSS").format(new java.sql.Timestamp(java.lang.System.currentTimeMillis()));
Map logmap = new HashMap();
logmap.put("begintime", begintime);
logmap.put("flow", payload.get("flow"));
logmap.put("node", payload.get("node"));
logmap.put("oid", payload.get("oid"));
logmap.put("billkey", payload.get("billkey"));
logmap.put("request_data", payload.get("json"));
message.setInboundProperty("logmap", logmap);
com.bokesoft.InterfaceOperator.checkTransaction(dbop, "BPM_Update_BankPayment_Amount");
return payload;
			]]>
			</spring:value>
		</spring:property>
	</custom-transformer>

		<custom-transformer class="com.bokesoft.dee.mule.common.transformer.LogProcessorTransformer" >
		<spring:property name="transformerName" value="记录更新本地银行付款单中间表核销表的开始时间"></spring:property>
		<spring:property name="filePath" value="${bokedee.logpath.debugLog}/ERP_BankPayment_TO_BPM"></spring:property>
		<spring:property name="errorLog" value="false"></spring:property>


	</custom-transformer>
		<!--本地银行付款单中间表查询非期初导入的发票信息-->
	<custom-transformer class="com.bokesoft.exchange.transformer.ScriptWithDSTransformer" name="本地银行付款单中间表查询非期初导入的发票信息">
		<spring:property name="ds" ref="2c9081d05be7e572015be80fcb64000f_YIGO2_DB"></spring:property>
		<spring:property name="script">
			<spring:value>
			<![CDATA[
				List < Map > data = dbop.select(" select invoice_id,sum(amount) as a_amount,sum(invoice_amount) as a_invoice_amount from bank_payment_tmp_mid  where item_type not like '%期初导入%' group by invoice_id", message);
return data;
			]]>
			</spring:value>
		</spring:property>
	</custom-transformer>

		<custom-transformer class="com.bokesoft.dee.mule.common.transformer.LogProcessorTransformer" >
		<spring:property name="transformerName" value="本地银行付款单中间表查询非期初导入的发票信息"></spring:property>
		<spring:property name="filePath" value="${bokedee.logpath.debugLog}/ERP_BankPayment_TO_BPM"></spring:property>
		<spring:property name="errorLog" value="false"></spring:property>


	</custom-transformer>
		<!--根据本地查询结果筛选ERP核销信息并合并数据-->
	<custom-transformer class="com.bokesoft.exchange.transformer.ScriptWithDSTransformer" name="根据本地查询结果筛选ERP核销信息并合并数据">
		<spring:property name="ds" ref="8aaae09b5bf03e9f015bf17bc58e061f_ERP_TO_BPM"></spring:property>
		<spring:property name="script">
			<spring:value>
			<![CDATA[
				Map m = new HashMap();
m = com.bokesoft.GetSqlStr.sqlinconnect(payload);
String s = m.get("sql");
Object[] o = m.get("object");
List < Map > data1 = dbop.select("select invoice_id,sum(amount) as b_amount,sum(invoice_amount) as b_invoice_amount from apps.cux3_eflow_ap_prepay_v where 1=1" + s + " group by invoice_id ", o);
List < Map > dt1 = com.bokesoft.PooledData.pooleddata(payload, data1);
return dt1;
			]]>
			</spring:value>
		</spring:property>
	</custom-transformer>

		<custom-transformer class="com.bokesoft.dee.mule.common.transformer.LogProcessorTransformer" >
		<spring:property name="transformerName" value="根据本地查询结果筛选ERP核销信息并合并数据"></spring:property>
		<spring:property name="filePath" value="${bokedee.logpath.debugLog}/ERP_BankPayment_TO_BPM"></spring:property>
		<spring:property name="errorLog" value="false"></spring:property>


	</custom-transformer>
		<!--根据本地查询结果筛选本地核销核销信息并合并数据-->
	<custom-transformer class="com.bokesoft.exchange.transformer.ScriptWithDSTransformer" name="根据本地查询结果筛选本地核销核销信息并合并数据">
		<spring:property name="ds" ref="2c9081d05be7e572015be80fcb64000f_YIGO2_DB"></spring:property>
		<spring:property name="script">
			<spring:value>
			<![CDATA[
				Map m = new HashMap();
m = com.bokesoft.GetSqlStr.sqlinconnect(payload);
String s = m.get("sql");
Object[] o = m.get("object");
List < Map > data2 = dbop.select("select invoice_id, sum(amount) as c_amount,sum(invoice_amount) as c_invoice_amount from bank_payment_result_mid where  1=1" + s + " group by invoice_id ", o);
List < Map > dt2 = com.bokesoft.PooledDataList.pooleddata(payload, data2);
return dt2;
			]]>
			</spring:value>
		</spring:property>
	</custom-transformer>

		<custom-transformer class="com.bokesoft.dee.mule.common.transformer.LogProcessorTransformer" >
		<spring:property name="transformerName" value="根据本地查询结果筛选本地核销核销信息并合并数据"></spring:property>
		<spring:property name="filePath" value="${bokedee.logpath.debugLog}/ERP_BankPayment_TO_BPM"></spring:property>
		<spring:property name="errorLog" value="false"></spring:property>


	</custom-transformer>
		<!--计算金额合计与发票金额合计-->
	<script:transformer name="计算金额合计与发票金额合计">
		<script:script engine="groovy">
			<script:text><![CDATA[
				List < Map > dt = com.bokesoft.ComputationalData.computationaldata(payload);
return dt;
				]]></script:text>
		</script:script>
	</script:transformer>	
		<custom-transformer class="com.bokesoft.dee.mule.common.transformer.LogProcessorTransformer" >
		<spring:property name="transformerName" value="计算金额合计与发票金额合计"></spring:property>
		<spring:property name="filePath" value="${bokedee.logpath.debugLog}/ERP_BankPayment_TO_BPM"></spring:property>
		<spring:property name="errorLog" value="false"></spring:property>


	</custom-transformer>
		<!--更新本地银行付款单中间表发票金额-->
	<custom-transformer class="com.bokesoft.dee.transport.jdbc.transformer.ExecuteSQLSimpleTransformer" name="更新本地银行付款单中间表发票金额">
		<spring:property name="queries">
			<spring:list>
				<spring:value> <![CDATA[
					update bank_payment_tmp_mid set amount = #[map-payload:abc_amount],invoice_amount=#[map-payload:abc_invoice_amount] where invoice_id =#[map-payload:invoice_id]
				]]></spring:value>
			</spring:list>		
		</spring:property>
		<spring:property name="ds" ref="2c9081d05be7e572015be80fcb64000f_YIGO2_DB"></spring:property>
		<spring:property name="resultIndexOf" value="0"></spring:property>
		<spring:property name="ignoreSQLError" value="false"></spring:property>
	</custom-transformer>
	

		<custom-transformer class="com.bokesoft.dee.mule.common.transformer.LogProcessorTransformer" >
		<spring:property name="transformerName" value="更新本地银行付款单中间表发票金额"></spring:property>
		<spring:property name="filePath" value="${bokedee.logpath.debugLog}/ERP_BankPayment_TO_BPM"></spring:property>
		<spring:property name="errorLog" value="false"></spring:property>


	</custom-transformer>
		<!--更新或新增本地核销表发票信息-->
	<custom-transformer class="com.bokesoft.dee.transport.jdbc.transformer.ExecuteSQLSaveOrUpdateTransformer" name="更新或新增本地核销表发票信息">
		<spring:property name="updateQuery" value="update bank_payment_result_mid set amount = #[map-payload:bc_amount],invoice_amount = #[map-payload:bc_invoice_amount] where invoice_id =#[map-payload:invoice_id]"></spring:property>
		<spring:property name="insertQuery" value="insert into bank_payment_result_mid (invoice_id,item_type,amount,invoice_amount) values (#[map-payload:invoice_id],'预付款核销',#[map-payload:bc_amount],#[map-payload:bc_invoice_amount])"></spring:property>
		<spring:property name="ds" ref="2c9081d05be7e572015be80fcb64000f_YIGO2_DB"></spring:property>
		<spring:property name="ignoreSQLError" value="false"></spring:property>
	</custom-transformer>
	

		<custom-transformer class="com.bokesoft.dee.mule.common.transformer.LogProcessorTransformer" >
		<spring:property name="transformerName" value="更新或新增本地核销表发票信息"></spring:property>
		<spring:property name="filePath" value="${bokedee.logpath.debugLog}/ERP_BankPayment_TO_BPM"></spring:property>
		<spring:property name="errorLog" value="false"></spring:property>


	</custom-transformer>

	<transformer ref="ggpz_提交或者回滚JDBC事务"/>

		<custom-transformer class="com.bokesoft.dee.mule.common.transformer.LogProcessorTransformer" >
		<spring:property name="transformerName" value="提交或者回滚JDBC事务"></spring:property>
		<spring:property name="filePath" value="${bokedee.logpath.debugLog}/ERP_BankPayment_TO_BPM"></spring:property>
		<spring:property name="errorLog" value="false"></spring:property>


	</custom-transformer><default-exception-strategy><processor-chain>

	<transformer ref="ggpz_提交或者回滚JDBC事务"/>

		<custom-transformer class="com.bokesoft.dee.mule.common.transformer.LogProcessorTransformer" >
		<spring:property name="transformerName" value="提交或者回滚JDBC事务"></spring:property>
		<spring:property name="filePath" value="${bokedee.logpath.debugLog}/ERP_BankPayment_TO_BPM"></spring:property>
		<spring:property name="errorLog" value="true"></spring:property>


	</custom-transformer>

	<transformer ref="ggpz_把异常对象转换为文本"/>

		<custom-transformer class="com.bokesoft.dee.mule.common.transformer.LogProcessorTransformer" >
		<spring:property name="transformerName" value="把异常对象转换为文本"></spring:property>
		<spring:property name="filePath" value="${bokedee.logpath.debugLog}/ERP_BankPayment_TO_BPM"></spring:property>
		<spring:property name="errorLog" value="true"></spring:property>


	</custom-transformer>
		<file:outbound-endpoint path="${bokedee.logpath.runtimeLog}/ERP_BankPayment_TO_BPM"  name="记录错误日志到文件_BPM_BankPayment_Tmp_MID"
		
		outputPattern="#[function:datestamp:yyyyMMddHHmmss]-#[message:id].xml">
		<property key="file_subdir" value="#[context:serviceName]/#[function:datestamp:yyyyMMdd]" />
	</file:outbound-endpoint>


		<custom-transformer class="com.bokesoft.dee.mule.common.transformer.LogProcessorTransformer" >
		<spring:property name="transformerName" value="记录错误日志到文件_BPM_BankPayment_Tmp_MID"></spring:property>
		<spring:property name="filePath" value="${bokedee.logpath.debugLog}/ERP_BankPayment_TO_BPM"></spring:property>
		<spring:property name="errorLog" value="true"></spring:property>


	</custom-transformer></processor-chain></default-exception-strategy></flow></mule>