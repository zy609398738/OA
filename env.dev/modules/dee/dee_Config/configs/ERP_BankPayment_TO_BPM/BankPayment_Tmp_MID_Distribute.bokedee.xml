<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns:ftp="http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.ftp/1.2"
	xmlns:script="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:file="http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.file/1.2"
	xmlns:http="http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.http/1.2"
	xmlns:https="http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.https/1.2"
	xmlns:tcp="http://www.mulesoft.org/schema/mule/tcp"
	xmlns:stdio="http://www.mulesoft.org/schema/mule/stdio" xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf"
	xmlns:axis="http://www.mulesoft.org/schema/mule/axis" xmlns:jbossts="http://www.mulesoft.org/schema/mule/jbossts"
	xmlns:jdbc="http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.jdbc/1.2"
	xmlns:pattern="http://www.mulesoft.org/schema/mule/pattern" xmlns:sftp="http://www.mulesoft.org/schema/mule/sftp"
	xmlns:smooks="http://www.muleforge.org/smooks/schema/mule-module-smooks"
  xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
  xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp"
  xmlns:imap="http://www.mulesoft.org/schema/mule/imap"
 xmlns:pop3="http://www.mulesoft.org/schema/mule/pop3"
  xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.1/mule.xsd
http://www.mulesoft.org/schema/mule/jbossts http://www.mulesoft.org/schema/mule/jbossts/3.1/mule-jbossts.xsd
http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.jdbc/1.2 http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.jdbc/1.2/mule-com.bokesoft.dee.patch.jdbc.xsd
http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.file/1.2 http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.file/1.2/mule-com.bokesoft.dee.patch.file.xsd
http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.http/1.2 http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.http/1.2/mule-com.bokesoft.dee.patch.http.xsd
http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.https/1.2 http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.https/1.2/mule-com.bokesoft.dee.patch.https.xsd
http://www.mulesoft.org/schema/mule/tcp http://www.mulesoft.org/schema/mule/tcp/3.1/mule-tcp.xsd
http://www.muleforge.org/smooks/schema/mule-module-smooks http://dist.muleforge.org/smooks/schema/mule-module-smooks/1.1/mule-module-smooks.xsd
http://www.mulesoft.org/schema/mule/stdio http://www.mulesoft.org/schema/mule/stdio/3.1/mule-stdio.xsd
http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/3.1/mule-cxf.xsd
http://www.mulesoft.org/schema/mule/axis http://www.mulesoft.org/schema/mule/axis/3.1/mule-axis.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/3.1/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/pattern http://www.mulesoft.org/schema/mule/pattern/3.1/mule-pattern.xsd
        http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.ftp/1.2 http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.ftp/1.2/mule-com.bokesoft.dee.patch.ftp.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/3.1/mule-vm.xsd 
     http://www.mulesoft.org/schema/mule/sftp http://www.mulesoft.org/schema/mule/sftp/3.1/mule-sftp.xsd 
    http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/3.1/mule-jms.xsd 
  http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/3.1/mule-smtp.xsd 
	http://www.mulesoft.org/schema/mule/imap http://www.mulesoft.org/schema/mule/imap/3.1/mule-imap.xsd 
 http://www.mulesoft.org/schema/mule/pop3 http://www.mulesoft.org/schema/mule/pop3/3.1/mule-pop3.xsd ">

		<!--记录查询银行付款单表头数据接口日志-->
	<custom-transformer class="com.bokesoft.exchange.transformer.ScriptWithDSTransformer" name="记录查询银行付款单表头数据接口日志">
		<spring:property name="ds" ref="2c9081d05be7e572015be80fcb64000f_YIGO2_DB"></spring:property>
		<spring:property name="script">
			<spring:value>
			<![CDATA[
				String expMsg = "";
Map rsmap = new HashMap();
if (message.getExceptionPayload() != null)
{
    message.setOutboundProperty("http.status", 200);
    expMsg = message.getExceptionPayload().getRootException().getMessage();
    if (expMsg.length() > 3500)
    {
        expMsg = expMsg.substring(0, 3000);
    }
    message.setExceptionPayload(null);
    rsmap.put("code", "0003");
    rsmap.put("msg", "查询失败！");
}
else
{
    rsmap.put("code", "0002");
    rsmap.put("msg", "查询成功！");
    rsmap.put("data", payload);
}
Map logmap = message.getInboundProperty("logmap");
Object[] o = new Object[10];
o[0] = "BankPayment_flow";
o[1] = "开始";
o[2] = "B_BankPayment";
o[3] = "";
o[4] = logmap.get("begintime");
o[5] = new java.text.SimpleDateFormat("yyyyMMdd HH:mm:ss.SSS").format(new java.sql.Timestamp(java.lang.System.currentTimeMillis()));
o[6] = "";
o[7] = "";
o[8] = expMsg;
o[9] = "BankPayment_Tmp_MID_Distribute";
dbop.saveOrUpdate("insert into TRINA_SL_INTERFACE_LOG(id,flow,node,billkey,oid,starttime,endtime,request_data,response_data,EXCEPTION,interface_type)values(Trina_SL_Interface_Log_ID_SEQ.Nextval,?,?,?,?,?,?,?,?,?,?)", o, false);
return rsmap.get("code");
			]]>
			</spring:value>
		</spring:property>
	</custom-transformer>

		<custom-transformer class="com.bokesoft.dee.mule.common.transformer.LogProcessorTransformer" name="8aaae0d360766f5e0160772f96ef006c">
		<spring:property name="transformerName" value="记录查询银行付款单表头数据接口日志"></spring:property>
		<spring:property name="filePath" value="${bokedee.logpath.debugLog}/ERP_BankPayment_TO_BPM"></spring:property>
		<spring:property name="errorLog" value="false"></spring:property>


	</custom-transformer><flow name="BankPayment_Tmp_MID_Distribute">
		<!--查询银行付款单中间表数据分发入口-->
	<vm:inbound-endpoint  name="查询银行付款单中间表数据分发入口"
		encoding="UTF-8"
		address="vm://BankPayment_Tmp_MID_Distribute" 
		exchange-pattern ="request-response" 
		responseTransformer-refs ="记录查询银行付款单表头数据接口日志 8aaae0d360766f5e0160772f96ef006c"
		>
	</vm:inbound-endpoint>

		<custom-transformer class="com.bokesoft.dee.mule.common.transformer.LogProcessorTransformer" >
		<spring:property name="transformerName" value="查询银行付款单中间表数据分发入口"></spring:property>
		<spring:property name="filePath" value="${bokedee.logpath.debugLog}/ERP_BankPayment_TO_BPM"></spring:property>
		<spring:property name="errorLog" value="false"></spring:property>


	</custom-transformer>
		<!--记录查询银行付款单表头数据开始时间-->
	<script:transformer name="记录查询银行付款单表头数据开始时间">
		<script:script engine="groovy">
			<script:text><![CDATA[
				String begintime = new java.text.SimpleDateFormat("yyyyMMdd HH:mm:ss.SSS").format(new java.sql.Timestamp(java.lang.System.currentTimeMillis()));
Map logmap = new HashMap();
logmap.put("begintime", begintime);
message.setInboundProperty("logmap", logmap);
return payload;
				]]></script:text>
		</script:script>
	</script:transformer>	
		<custom-transformer class="com.bokesoft.dee.mule.common.transformer.LogProcessorTransformer" >
		<spring:property name="transformerName" value="记录查询银行付款单表头数据开始时间"></spring:property>
		<spring:property name="filePath" value="${bokedee.logpath.debugLog}/ERP_BankPayment_TO_BPM"></spring:property>
		<spring:property name="errorLog" value="false"></spring:property>


	</custom-transformer>
		<!--查询银行付款单表头数据-->
	<custom-transformer class="com.bokesoft.dee.transport.jdbc.transformer.ExecuteSQLSimpleTransformer" name="查询银行付款单表头数据">
		<spring:property name="queries">
			<spring:list>
				<spring:value> <![CDATA[
					select guid,
       header_id,
       item_type,
       detail_type,
       org_id as ou_code,
       name as ou_name,
       vendor_name,
       vendor_num,
       to_char(ap_date, 'yyyy-MM-dd') as ap_date,
       invoice_num,
       invoice_id,
       line_num,
       term_name,
       to_char(due_date, 'yyyy-MM-dd') as due_date,
       case 
         when payment_method_name in ('电汇',
                                  '商业承兑汇票（3个月）',
                                  '商业承兑汇票（4个月）',
                                  '商业承兑汇票（6个月）',
                                  '信用证',
                                  '银行承兑汇票（3个月）',
                                  '银行承兑汇票（6个月）',
                                  '支票') then
          payment_method_name
         else
          '其他'
       end as paymentmethod_name,
       currency_code,
       to_char(invoice_amount) as invoice_amount,
       to_char(amount) as amount,
       employee_number,
       employee_name,
       original_currency as orig_currencycode,
       requestor_number,
       adaccount,
       flag
  from bank_payment_tmp_mid
 where invoice_amount > 0
   and requestor_number is not null
   and flag is null
   and org_id not in ('804',
                      '864',
                      '1104',
                      '1105',
                      '1244',
                      '1245',
                      '1264',
                      '1264',
                      '1364',
                      '1464',
                      '1525',
                      '1526',
                      '1545',
                      '1564',
                      '1588',
                      '1603',
                      '1604',
                      '1609',
                      '1610',
                      '1647',
                      '1648',
                      '1649',
                      '1653',
                      '1657',
                      '1658',
                      '1659',
                      '1663',
                      '1673',
                      '1674',
                      '1682',
                      '1683',
                      '1685',
                      '1689',
                      '1694',
                      '1695',
                      '1698',
                      '1699',
                      '1704',
                      '1705',
                      '1711',
                      '1726',
                      '1731',
                      '1734',
                      '1735',
                      '1738',
                      '1746',
                      '1747',
                      '1748',
                      '1749',
                      '1750',
                      '1751',
                      '1752',
                      '1753',
                      '1764',
                      '1765',
                      '1766',
                      '1767',
                      '1768',
                      '1769',
                      '1780',
                      '1784',
                      '1786',
                      '1788',
                      '1790',
                      '1792',
                      '1796',
                      '1810',
                      '1830',
                      '1831',
                      '1832',
                      '1833',
                      '1834',
                      '1835',
                      '1836',
                      '1837',
                      '1838',
                      '1870',
                      '1871',
                      '1890',
                      '1910',
                      '1912',
                      '1914',
                      '1916',
                      '1917',
                      '1970',
                      '2010',
                      '2011',
                      '2030',
                      '2110',
                      '2111',
                      '2130',
                      '2372',
                      '2396',
                      '2430',
                      '2432',
                      '2435',
                      '2437',
                      '2460',
                      '2490',
                      '2511',
                      '2670',
                      '2710')
   and rownum < 51
				]]></spring:value>
			</spring:list>		
		</spring:property>
		<spring:property name="ds" ref="2c9081d05be7e572015be80fcb64000f_YIGO2_DB"></spring:property>
		<spring:property name="resultIndexOf" value="1"></spring:property>
		<spring:property name="ignoreSQLError" value="false"></spring:property>
	</custom-transformer>
	

		<custom-transformer class="com.bokesoft.dee.mule.common.transformer.LogProcessorTransformer" >
		<spring:property name="transformerName" value="查询银行付款单表头数据"></spring:property>
		<spring:property name="filePath" value="${bokedee.logpath.debugLog}/ERP_BankPayment_TO_BPM"></spring:property>
		<spring:property name="errorLog" value="false"></spring:property>


	</custom-transformer>	
	<!--循环分发查询结果至生成单据服务-->
	<custom-transformer class="com.bokesoft.dee.mule.dispatch.transformer.DispatchVMTransformer" name="循环分发查询结果至生成单据服务">
		<spring:property name="vmUrl" value="vm://BankPayment_Tmp_MID_TO_YIGO"></spring:property>
		<spring:property name="interfaceName" value="ERP_BankPayment_TO_BPM"></spring:property>
		<spring:property name="useList" value="true"></spring:property>
	</custom-transformer>
		<custom-transformer class="com.bokesoft.dee.mule.common.transformer.LogProcessorTransformer" >
		<spring:property name="transformerName" value="循环分发查询结果至生成单据服务"></spring:property>
		<spring:property name="filePath" value="${bokedee.logpath.debugLog}/ERP_BankPayment_TO_BPM"></spring:property>
		<spring:property name="errorLog" value="false"></spring:property>


	</custom-transformer><default-exception-strategy><processor-chain>

	<transformer ref="ggpz_把异常对象转换为文本"/>

		<custom-transformer class="com.bokesoft.dee.mule.common.transformer.LogProcessorTransformer" >
		<spring:property name="transformerName" value="把异常对象转换为文本"></spring:property>
		<spring:property name="filePath" value="${bokedee.logpath.debugLog}/ERP_BankPayment_TO_BPM"></spring:property>
		<spring:property name="errorLog" value="true"></spring:property>


	</custom-transformer>
		<file:outbound-endpoint path="${bokedee.logpath.runtimeLog}/ERP_BankPayment_TO_BPM"  name="记录错误日志到文件_BankPayment_Tmp_MID_Distribute"
		
		outputPattern="#[function:datestamp:yyyyMMddHHmmss]-#[message:id].xml">
		<property key="file_subdir" value="#[context:serviceName]/#[function:datestamp:yyyyMMdd]" />
	</file:outbound-endpoint>


		<custom-transformer class="com.bokesoft.dee.mule.common.transformer.LogProcessorTransformer" >
		<spring:property name="transformerName" value="记录错误日志到文件_BankPayment_Tmp_MID_Distribute"></spring:property>
		<spring:property name="filePath" value="${bokedee.logpath.debugLog}/ERP_BankPayment_TO_BPM"></spring:property>
		<spring:property name="errorLog" value="true"></spring:property>


	</custom-transformer></processor-chain></default-exception-strategy></flow></mule>