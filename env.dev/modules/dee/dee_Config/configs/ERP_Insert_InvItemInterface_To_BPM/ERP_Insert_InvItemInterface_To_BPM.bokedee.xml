<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns:ftp="http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.ftp/1.2"
	xmlns:script="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:file="http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.file/1.2"
	xmlns:http="http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.http/1.2"
	xmlns:https="http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.https/1.2"
	xmlns:tcp="http://www.mulesoft.org/schema/mule/tcp"
	xmlns:stdio="http://www.mulesoft.org/schema/mule/stdio" xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf"
	xmlns:axis="http://www.mulesoft.org/schema/mule/axis" xmlns:jbossts="http://www.mulesoft.org/schema/mule/jbossts"
	xmlns:jdbc="http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.jdbc/1.2"
	xmlns:pattern="http://www.mulesoft.org/schema/mule/pattern" xmlns:sftp="http://www.mulesoft.org/schema/mule/sftp"
	xmlns:smooks="http://www.muleforge.org/smooks/schema/mule-module-smooks"
  xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
  xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp"
  xmlns:imap="http://www.mulesoft.org/schema/mule/imap"
 xmlns:pop3="http://www.mulesoft.org/schema/mule/pop3"
  xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.1/mule.xsd
http://www.mulesoft.org/schema/mule/jbossts http://www.mulesoft.org/schema/mule/jbossts/3.1/mule-jbossts.xsd
http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.jdbc/1.2 http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.jdbc/1.2/mule-com.bokesoft.dee.patch.jdbc.xsd
http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.file/1.2 http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.file/1.2/mule-com.bokesoft.dee.patch.file.xsd
http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.http/1.2 http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.http/1.2/mule-com.bokesoft.dee.patch.http.xsd
http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.https/1.2 http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.https/1.2/mule-com.bokesoft.dee.patch.https.xsd
http://www.mulesoft.org/schema/mule/tcp http://www.mulesoft.org/schema/mule/tcp/3.1/mule-tcp.xsd
http://www.muleforge.org/smooks/schema/mule-module-smooks http://dist.muleforge.org/smooks/schema/mule-module-smooks/1.1/mule-module-smooks.xsd
http://www.mulesoft.org/schema/mule/stdio http://www.mulesoft.org/schema/mule/stdio/3.1/mule-stdio.xsd
http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/3.1/mule-cxf.xsd
http://www.mulesoft.org/schema/mule/axis http://www.mulesoft.org/schema/mule/axis/3.1/mule-axis.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/3.1/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/pattern http://www.mulesoft.org/schema/mule/pattern/3.1/mule-pattern.xsd
        http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.ftp/1.2 http://dee.bokesoft.com/schema/mule/com.bokesoft.dee.patch.ftp/1.2/mule-com.bokesoft.dee.patch.ftp.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/3.1/mule-vm.xsd 
     http://www.mulesoft.org/schema/mule/sftp http://www.mulesoft.org/schema/mule/sftp/3.1/mule-sftp.xsd 
    http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/3.1/mule-jms.xsd 
  http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/3.1/mule-smtp.xsd 
	http://www.mulesoft.org/schema/mule/imap http://www.mulesoft.org/schema/mule/imap/3.1/mule-imap.xsd 
 http://www.mulesoft.org/schema/mule/pop3 http://www.mulesoft.org/schema/mule/pop3/3.1/mule-pop3.xsd ">

		<!--实时记录回写BPM物料分配单InvItemInterface表的数据至ERP的日志信息-->
	<custom-transformer class="com.bokesoft.exchange.transformer.ScriptWithDSTransformer" name="实时记录回写BPM物料分配单InvItemInterface表的数据至ERP的日志信息">
		<spring:property name="ds" ref="2c9081d05be7e572015be80fcb64000f_YIGO2_DB"></spring:property>
		<spring:property name="script">
			<spring:value>
			<![CDATA[
				String expMsg = "";
Map rsmap = new HashMap();
if (message.getExceptionPayload() != null)
{
    message.setOutboundProperty("http.status", 200);
    expMsg = message.getExceptionPayload().getRootException().getMessage();
    if (expMsg.length() > 3500)
    {
        expMsg = expMsg.substring(0, 3000);
    }
    message.setExceptionPayload(null);
    rsmap.put("code", "e");
    rsmap.put("msg", "更新失败！");
}
else
{
    rsmap.put("code", "s");
    rsmap.put("msg", "更新成功！");
    rsmap.put("data", payload);
}
Map logmap = message.getInboundProperty("logmap");
Object[] o = new Object[10];
o[0] = logmap.get("flow");
o[1] = logmap.get("node");
o[2] = logmap.get("billkey");
o[3] = logmap.get("oid");
o[4] = logmap.get("begintime");
o[5] = new java.text.SimpleDateFormat("yyyyMMdd HH:mm:ss.SSS").format(new java.sql.Timestamp(java.lang.System.currentTimeMillis()));
o[6] = "";
o[7] = "";
o[8] = expMsg;
o[9] = "ERP_Insert_InvItemInterface_To_BPM";
dbop.saveOrUpdate("insert into TRINA_SL_INTERFACE_LOG(id,flow,node,billkey,oid,starttime,endtime,request_data,response_data,EXCEPTION,interface_type)values(Trina_SL_Interface_Log_ID_SEQ.Nextval,?,?,?,?,?,?,?,?,?,?)", o, false);
return com.bokesoft.dee.mule.util.json.JSONUtil.toJson(rsmap);
			]]>
			</spring:value>
		</spring:property>
	</custom-transformer>

		<custom-transformer class="com.bokesoft.dee.mule.common.transformer.LogProcessorTransformer" name="ff8080816205caa1016205ee786200ad">
		<spring:property name="transformerName" value="实时记录回写BPM物料分配单InvItemInterface表的数据至ERP的日志信息"></spring:property>
		<spring:property name="filePath" value="${bokedee.logpath.debugLog}/ERP_Insert_InvItemInterface_To_BPM"></spring:property>
		<spring:property name="errorLog" value="false"></spring:property>


	</custom-transformer><flow name="ERP_Insert_InvItemInterface_To_BPM">
		<!--实时回写BPM物料分配单表InvItemInterface的数据至ERP的入口-->
	<vm:inbound-endpoint  name="实时回写BPM物料分配单表InvItemInterface的数据至ERP的入口"
		encoding="UTF-8"
		address="vm://ERP_Insert_InvItemInterface_To_BPM" 
		exchange-pattern ="request-response" 
		responseTransformer-refs ="实时记录回写BPM物料分配单InvItemInterface表的数据至ERP的日志信息 ff8080816205caa1016205ee786200ad"
		>
	</vm:inbound-endpoint>

		<custom-transformer class="com.bokesoft.dee.mule.common.transformer.LogProcessorTransformer" >
		<spring:property name="transformerName" value="实时回写BPM物料分配单表InvItemInterface的数据至ERP的入口"></spring:property>
		<spring:property name="filePath" value="${bokedee.logpath.debugLog}/ERP_Insert_InvItemInterface_To_BPM"></spring:property>
		<spring:property name="errorLog" value="false"></spring:property>


	</custom-transformer>
		<!--实时记录回写BPM物料分配单InvItemInterface表的数据至ERP开始时间-->
	<script:transformer name="实时记录回写BPM物料分配单InvItemInterface表的数据至ERP开始时间">
		<script:script engine="groovy">
			<script:text><![CDATA[
				String begintime = new java.text.SimpleDateFormat("yyyyMMdd HH:mm:ss.SSS").format(new java.sql.Timestamp(java.lang.System.currentTimeMillis()));
Map logmap = new HashMap();
logmap.put("begintime", begintime);
logmap.put("flow", payload.get("flow"));
logmap.put("node", payload.get("node"));
logmap.put("oid", payload.get("oid"));
logmap.put("billkey", payload.get("billkey"));
logmap.put("request_data", payload.get("json"));
message.setInboundProperty("logmap", logmap);
return payload;
				]]></script:text>
		</script:script>
	</script:transformer>	
		<custom-transformer class="com.bokesoft.dee.mule.common.transformer.LogProcessorTransformer" >
		<spring:property name="transformerName" value="实时记录回写BPM物料分配单InvItemInterface表的数据至ERP开始时间"></spring:property>
		<spring:property name="filePath" value="${bokedee.logpath.debugLog}/ERP_Insert_InvItemInterface_To_BPM"></spring:property>
		<spring:property name="errorLog" value="false"></spring:property>


	</custom-transformer>
		<!--实时回写BPM物料分配单InvItemInterface表的数据至ERP-->
	<custom-transformer class="com.bokesoft.exchange.transformer.ScriptWithDSTransformer" name="实时回写BPM物料分配单InvItemInterface表的数据至ERP">
		<spring:property name="ds" ref="8aaae09b5bf03e9f015bf17bc58e061f_ERP_TO_BPM"></spring:property>
		<spring:property name="script">
			<spring:value>
			<![CDATA[
				Object[] o = new Object[33];
o[0] = payload.get("item_segment1");
o[1] = payload.get("inventory_item_id");
o[2] = payload.get("description");
o[3] = payload.get("primary_uom_code");
o[4] = payload.get("category_id1");
o[5] = payload.get("category_id2");
o[6] = payload.get("planning_make_buy_code");
o[7] = payload.get("cost_of_sales_account");
o[8] = payload.get("buyer_name");
o[9] = payload.get("receipt_required_flag");
o[10] = payload.get("inspection_required_flag");
o[11] = payload.get("receiving_routing_id");
o[12] = payload.get("inventory_planning_code");
o[13] = payload.get("mrp_planning_code");
o[14] = payload.get("postprocessing_lead_time");
o[15] = payload.get("fixed_lead_time");
o[16] = payload.get("wip_supply_type");
o[17] = payload.get("shrinkage_rate");
o[18] = payload.get("full_lead_time");
o[19] = payload.get("template_id");
o[20] = payload.get("source_code");
o[21] = payload.get("source_id");
o[22] = payload.get("source_line_id");
o[23] = payload.get("process_type");
o[24] = payload.get("process_status");
o[25] = payload.get("process_message");
o[26] = payload.get("row_version_number");
o[27] = payload.get("created_by");
o[28] = payload.get("last_updated_by");
o[29] = payload.get("attribute17");
o[30] = payload.get("attribute18");
o[31] = payload.get("attribute19");
o[32] = payload.get("attribute4");
dbop.saveOrUpdate("Insert into apps.cux3_inv_item_interface (item_segment1,inventory_item_id,description,primary_uom_code,category_id1,category_id2,planning_make_buy_code,cost_of_sales_account,buyer_name,receipt_required_flag,inspection_required_flag,receiving_routing_id,inventory_planning_code,mrp_planning_code,postprocessing_lead_time,fixed_lead_time,wip_supply_type,shrinkage_rate,full_lead_time,template_id,source_code,source_id,source_line_id,process_type,process_status,process_date,process_message,row_version_number,creation_date,created_by,last_updated_by,last_update_date,attribute17,attribute18,attribute19,attribute4) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,sysdate,?,?,sysdate,?,?,sysdate,?,?,?,?)", o, false);
return true;
			]]>
			</spring:value>
		</spring:property>
	</custom-transformer>

		<custom-transformer class="com.bokesoft.dee.mule.common.transformer.LogProcessorTransformer" >
		<spring:property name="transformerName" value="实时回写BPM物料分配单InvItemInterface表的数据至ERP"></spring:property>
		<spring:property name="filePath" value="${bokedee.logpath.debugLog}/ERP_Insert_InvItemInterface_To_BPM"></spring:property>
		<spring:property name="errorLog" value="false"></spring:property>


	</custom-transformer><default-exception-strategy><processor-chain>

	<transformer ref="ggpz_把异常对象转换为文本"/>

		<custom-transformer class="com.bokesoft.dee.mule.common.transformer.LogProcessorTransformer" >
		<spring:property name="transformerName" value="ggpz_把异常对象转换为文本"></spring:property>
		<spring:property name="filePath" value="${bokedee.logpath.debugLog}/ERP_Insert_InvItemInterface_To_BPM"></spring:property>
		<spring:property name="errorLog" value="true"></spring:property>


	</custom-transformer>
		<file:outbound-endpoint path="${bokedee.logpath.runtimeLog}/ERP_Insert_InvItemInterface_To_BPM"  name="记录错误日志到文件_ERP_Insert_InvItemInterface_To_BPM"
		
		outputPattern="#[function:datestamp:yyyyMMddHHmmss]-#[message:id].xml">
		<property key="file_subdir" value="#[context:serviceName]/#[function:datestamp:yyyyMMdd]" />
	</file:outbound-endpoint>


		<custom-transformer class="com.bokesoft.dee.mule.common.transformer.LogProcessorTransformer" >
		<spring:property name="transformerName" value="记录错误日志到文件_ERP_Insert_InvItemInterface_To_BPM"></spring:property>
		<spring:property name="filePath" value="${bokedee.logpath.debugLog}/ERP_Insert_InvItemInterface_To_BPM"></spring:property>
		<spring:property name="errorLog" value="true"></spring:property>


	</custom-transformer></processor-chain></default-exception-strategy></flow></mule>